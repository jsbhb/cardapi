<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fireCloud.tradCity.member.mapper.MemberMapper">

	<resultMap type="com.fireCloud.tradCity.member.model.submodel.SimpleMemberInfoModel" id="simpleMemberInfo">
		<id column="memberId" property="memberId" jdbcType="INTEGER" />
		<result column="memberName" property="memberName" jdbcType="VARCHAR" />
		<result column="product" property="product" jdbcType="VARCHAR" />
		<result column="reputation" property="reputation" jdbcType="INTEGER" />
		<result column="logoPath" property="logoPath" jdbcType="VARCHAR" />
		<result column="frontPicPath" property="frontPicPath" jdbcType="VARCHAR" />
		<result column="guarantee" property="guarantee" jdbcType="INTEGER" />
		<result column="highQuality" property="highQuality" jdbcType="INTEGER" />
		<result column="sincerity" property="sincerity" jdbcType="INTEGER" />
		<result column="returnGoods" property="returnGoods" jdbcType="INTEGER" />
		<result column="province" property="province" jdbcType="VARCHAR" />
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="area" property="area" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="popularize" property="popularize" jdbcType="INTEGER" />
		<collection property="dictList" ofType = "com.fireCloud.tradCity.member.model.CategoryDictModel">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="categoryDict" property="categoryDict" jdbcType="INTEGER" />
			<result column="dictName" property="dictName" jdbcType="VARCHAR" />
		</collection>
		<collection property="entryList" ofType = "com.fireCloud.tradCity.member.model.CategoryEntryModel">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="categoryEntry" property="categoryEntry" jdbcType="INTEGER" />
			<result column="entryName" property="entryName" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	
	<resultMap type="com.fireCloud.tradCity.member.model.MemberInfoModel" id="memberInfo" extends = "simpleMemberInfo">
		<result column="notice" property="notice" jdbcType="VARCHAR" />
		<result column="aboutUs" property="aboutUs" jdbcType="VARCHAR" />
		<result column="licensePath" property="licensePath" jdbcType="VARCHAR" />
		<result column="operator" property="operator" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="qq" property="qq" jdbcType="VARCHAR" />
	</resultMap>

	<select id = "queryCount" resultType = "java.lang.Integer">
		select count(*) from member
	</select>

	<select id="querySimpleMember" resultMap="simpleMemberInfo"
		parameterType="java.util.Map">
		select m.id as memberId,mc.id,m.memberName,m.product,m.reputation,m.logoPath,m.frontPicPath,m.guarantee,m.highQuality,
		m.sincerity,m.returnGoods,m.province,m.city,m.area,m.address,m.popularize,mc.categoryDict,mc.categoryEntry,mc.dictName,mc.entryName 
		from (select * from member limit #{pagination.startRow} , #{pagination.endRow}) m left join 
		member_category mc on m.id = mc.memberId where 1=1
		<if test="member != null">
			<if test="member.memberName != null and member.memberName != ''">
				and m.memberName like concat('%',#{member.memberName,jdbcType=VARCHAR},'%')
			</if>
			<if test="member.dictList != null and member.dictList.size > 0">
				and mc.categoryDict in
				<foreach collection="member.dictList" item="item" open="("
				separator="," close=")">
					#{item.categoryDict, jdbcType=INTEGER}
				</foreach>
			</if>
			<if test="member.entryList != null and member.entryList.size > 0">
				and mc.categoryEntry in 
				<foreach collection="member.entryList" item="item" open="("
					separator="," close=")">
					#{item.categoryEntry, jdbcType=INTEGER}
				</foreach>
			</if>
			<if test="member.guarantee != null and member.guarantee != ''">
				and m.guarantee = #{member.guarantee, jdbcType=INTEGER}
			</if>
			<if test="member.highQuality != null and member.highQuality != ''">
				and m.highQuality = #{member.highQuality, jdbcType=INTEGER}
			</if>
			<if test="member.sincerity != null and member.sincerity != ''">
				and m.sincerity = #{member.sincerity, jdbcType=INTEGER}
			</if>
			<if test="member.returnGoods != null and member.returnGoods != ''">
				and m.returnGoods = #{member.returnGoods, jdbcType=INTEGER}
			</if>
			<if test="member.province != null and member.province != ''">
				and m.province = #{member.province}
			</if>
			<if test="member.city != null and member.city != ''">
				and m.city = #{member.city}
			</if>
			<if test="member.area != null and member.area != ''">
				and m.area = #{member.area}
			</if>
		</if>
		order by popularize desc 
		<if test="sortList != null and sortList.size > 0">
			<foreach collection="sortList" item="sort" open=""
					separator="" close="">
					,${sort.sortField} ${sort.sortRule}
			</foreach>
		</if>
	</select>
	
	<select id="queryMemberDetail" parameterType="java.lang.Integer" resultMap="memberInfo">
		select m.id as memberId,mc.id,m.memberName,m.product,m.reputation,m.logoPath,m.frontPicPath,m.guarantee,m.highQuality,
		m.sincerity,m.returnGoods,m.province,m.city,m.area,m.address,m.popularize,mc.categoryDict,mc.categoryEntry,mc.dictName,
		mc.entryName,m.notice,m.aboutUs,m.licensePath,m.operator,m.mobile,m.email,m.phone,m.qq 
		from member m left join member_category mc on m.id = mc.memberId where m.id = #{id, jdbcType=INTEGER}
	</select>
	
	<select id="queryMemberFileId" resultType="java.lang.String" parameterType="java.lang.Integer">
		select fileId from member_pic where memberId = #{memberId, jdbcType=INTEGER}
	</select>
</mapper>